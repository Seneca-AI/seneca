on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

name: run tests
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache protobuf library
        id: cache-protobuf
        uses: actions/cache@v1
        with:
          path: protobuf
          key: ${{ runner.os }}-protobuf
      - name: Build protobuf library
        if: steps.cache-protobuf.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/protocolbuffers/protobuf.git
          cd protobuf
          git submodule update --init --recursive
          ./autogen.sh
          ./autogen.sh
          ./configure
          make
          make check           
      - name: Install protobuf library
        run: |
          cd protobuf
          sudo make install
          sudo ldconfig
      - name: Copy proto files from common
        uses: actions/checkout@v2
        with:
          path: ./common
          repository: Seneca-AI/common
          token: ${{ secrets.CROSS_REPO_TOKEN }}

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Generate protos
      run:  |
        protoc ./common/api/type/*.proto --go_out=../ -I=./common/api/type
    - name: Run linters
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      if: success()
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Generate protos
      run:  |
        protoc ./common/api/type/*.proto --go_out=../ -I=./common/api/type
    - name: Run tests
      run: go test ./... -v -covermode=count

  coverage:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      if: success()
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Generate protos
      run:  |
        protoc ./common/api/type/*.proto --go_out=../ -I=./common/api/type
    - name: Calc coverage
      run: |
        go test ./... -v -covermode=count -coverprofile=coverage.out
    - name: Convert coverage.out to coverage.lcov
      uses: jandelgado/gcov2lcov-action@v1.0.6
    - name: Coveralls
      uses: coverallsapp/github-action@v1.1.2
      with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov